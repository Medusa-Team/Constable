tree	"fs" clone of file by getfile getfile.filename;
primary tree "fs";
tree	"domain" of process;

space all_domains = recursive "domain";
space all_files	= recursive "/";

all_domains     ENTER   all_domains,
	        READ    all_domains, all_files,
	        WRITE   all_domains, all_files,
	        SEE     all_domains, all_files;

function log
{
      local printk buf.message=$1 + "\n";
      update buf;
}

* getipc {
      med_oact = 0x3fffffff;
      vs = space all_files;
      //log("getipc IPC class="+ipc.ipc_class+" vs=["+spaces(vs)+"] med_oact="+med_oact);
      return OK;
}

function log_proc {
      log ("" + $1 + " pid="+process.pid+" cmd='"+process.cmdline+"' domain="+primaryspace(process,@"domain")
	      +" uid="+process.uid+" luid="+process.luid +" euid="+process.euid+" suid="+process.suid
	      +" pcap="+process.pcap+" icap="+process.icap+" ecap="+process.ecap
	      +" med_sact="+process.med_sact+" vs=["+spaces(process.vs)+"] vsr=["+spaces(process.vsr)+"] vsw=["+spaces(process.vsw)+"] vss=["+spaces(process.vss)+"]"
      );
}

* getprocess {
	enter(process,@"domain/init");
        process.med_sact = 0x3fffffff;
	//log_proc("getprocess");
	return OK;
}

//function _init
//{
//}

